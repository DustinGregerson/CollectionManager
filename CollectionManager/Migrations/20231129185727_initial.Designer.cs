// <auto-generated />
using System;
using CollectionManager.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CollectionManager.Migrations
{
    [DbContext(typeof(UsersContext))]
    [Migration("20231129185727_initial")]
    partial class initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CollectionManager.Models.item", b =>
                {
                    b.Property<int>("itemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("itemID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("image")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("userID")
                        .HasColumnType("int");

                    b.HasKey("itemID");

                    b.HasIndex("userID");

                    b.ToTable("items");

                    b.HasData(
                        new
                        {
                            itemID = 1,
                            Description = "An old type writter",
                            Name = "Type writter",
                            image = new byte[0]
                        },
                        new
                        {
                            itemID = 2,
                            Description = "An old type writter",
                            Name = "Amber",
                            image = new byte[0]
                        },
                        new
                        {
                            itemID = 3,
                            Description = "An old type writter",
                            Name = "Ancient pot ",
                            image = new byte[0]
                        });
                });

            modelBuilder.Entity("CollectionManager.Models.user", b =>
                {
                    b.Property<int>("userID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("userID"));

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("userName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("userID");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            userID = 1,
                            password = "test1",
                            userName = "test1"
                        },
                        new
                        {
                            userID = 2,
                            password = "test2",
                            userName = "test2"
                        },
                        new
                        {
                            userID = 3,
                            password = "test3",
                            userName = "test3"
                        });
                });

            modelBuilder.Entity("CollectionManager.Models.item", b =>
                {
                    b.HasOne("CollectionManager.Models.user", "user")
                        .WithMany()
                        .HasForeignKey("userID");

                    b.Navigation("user");
                });
#pragma warning restore 612, 618
        }
    }
}
